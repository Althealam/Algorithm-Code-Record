# 冒泡排序
# 思想：从数组的头部开始，依次比较相邻的元素对，如果它们的顺序不符合要求（在升序排序时是前一个大于后一个），就交换它们的位置，这样较大的元素会逐步“冒泡”到数组的末尾。这个过程不断重复，直到所有元素都排好序为止。
# 时间复杂度：O(n^2)（最好情况下，当数组已经有序时，时间复杂度为O(n)）
# 空间复杂度：O(1)（原地排序）
def bubble_sort(arr):
    n=len(arr)
    # 外层循环控制比较轮数，一共需要 n-1 轮
    for i in range(n):
        # 内层循环从头开始，两两比较相邻元素，把较大的逐渐“冒泡”到未排序部分的末尾(在未排序部分中进行两两比较)
        for j in range(0,n-i-1):
            if arr[j]>arr[j+1]:
                arr[j],arr[j+1]=arr[j+1],arr[j]
    return arr

# 可以通过debug模式来跑一下
arr=[5,3,8,4,2]
bubble_sort(arr)